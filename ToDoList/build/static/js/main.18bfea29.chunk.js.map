{"version":3,"sources":["ShowTime.js","Hoc/Hoc.js","Context/Context.js","Context/Child.js","Context/Parent.js","Sider.js","App.js","serviceWorker.js","ToDoList/ToDoInput.js","ToDoList/ToDoing.js","ToDoList/ToDoList.js","Request.js","Portal/Portal.js","Todolist0/Todoing.js","Portal/ParentPortal.js","Todolist0/Todoinput.js","Todolist0/Todolist.js","index.js"],"names":["Component","url","hoc","Com","title","Fetch","state","data","console","log","fetch","method","then","res","json","setState","result","this","props","displayName","name","getDisplayName","Music","a","map","item","author","Music2","Mymusic","Mymusic2","Hoc","b","con2","React","createContext","Child","context","contextType","Parent","time","Date","toLocaleString","timeId","setInterval","clearInterval","Sider","style","float","type","block","to","Boolean","window","location","hostname","match","ToDoInput","handleInput","e","keyCode","add","target","value","handleChange","parseInt","bind","c","refs","focus","className","htmlFor","id","onChange","onKeyDown","ref","inp","color","fontSize","onClick","ToDoing","todo","index","key","del","defaultProps","Portal","handleClick","ReactDOM","createPortal","document","body","delItem","duigou","checked","change","move","clear","doing","over","done","placeholder","required","ToDoList","addItem","dataItem","localStorage","setItem","JSON","stringify","splice","dataList","getItem","parse","undefined","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.18bfea29.chunk.js","sourcesContent":["import React,{Fragment,Component} from 'react';\r\nimport './index.css';\r\nimport { setTimeout } from 'timers';\r\n\r\n//类定义组件\r\nexport default class ShowTime extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            time:new Date().toLocaleString(),\r\n            a:100,\r\n            b:200\r\n        }\r\n        console.log('constructor');\r\n        // console.log(props);\r\n        setTimeout(()=>{\r\n            this.setState({\r\n                time:new Date().toLocaleString()\r\n            })\r\n        },1000)\r\n    }\r\n    shouldComponentUpdate(){\r\n        if(this.state.a > 10){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    componentDidUpdate(preProps,preState,data){\r\n        console.log('didupdate');\r\n        console.log(preState);\r\n        console.log(this.state.time);\r\n\r\n    }\r\n    getSnapshotBeforeUpdate(){\r\n        console.log('getSnapshot');\r\n        return {name:this.state.a};\r\n    }\r\n    componentDidMount(){\r\n        console.log('didmount');\r\n    }\r\n    render(){\r\n        console.log('render');\r\n        var {name,age} = this.props;\r\n        return (<Fragment>\r\n                    {/* 条件渲染 */}\r\n                    {name.length > 5?<div>姓名:{name}</div>:''}\r\n                    {name.length > 5&&<div>姓名:{name}</div>}\r\n                    \r\n                    <div>{this.state.time}</div>\r\n                    <div>年龄:{age}</div>\r\n                    {/*循环渲染 */}\r\n                    <div>\r\n                        {\r\n                            age.map((item,index)=>{\r\n                                if(index%2 == 0){\r\n                                    return <p key={item}>{item}</p>\r\n                                }\r\n                            })\r\n                        }\r\n                    </div>\r\n                </Fragment>\r\n            )\r\n    }\r\n}\r\n\r\n//默认导出：一个文件只能默认导出一次，被引入时可以重命名\r\n//export default ShowTime;\r\n\r\n// 命名导出：可以导出多个，被引入时与导出的名一致\r\n// export {ShowTime};\r\n// export const num = 100;\r\n// export const num1 = 100;\r\n// export const num2 = 100;\r\n// export const num3 = 100;\r\n// export const num4 = 100;\r\n","import React, { Component } from 'react'\r\nimport {fetch} from 'whatwg-fetch'\r\nlet url = 'https://api.apiopen.top/musicRankingsDetails?type=1';\r\n\r\nfunction getDisplayName(Com){\r\n    return Com.displayName || Com.name || 'Component'\r\n}\r\nfunction hoc(Com,url,title){\r\n    class Fetch extends Component{\r\n        constructor(){\r\n            super();\r\n            this.state = {\r\n                data:[]\r\n            }\r\n        }\r\n        componentDidMount(){\r\n            console.log(fetch);\r\n            //默认是get请求，可配置第二个参数，配置请求的信息\r\n            fetch(url,{method:'post'})\r\n                .then((res)=>res.json())\r\n                .then((res)=>{\r\n                    console.log(res);\r\n                    this.setState({\r\n                        data:res.result\r\n                    })\r\n                })\r\n        }\r\n        render(){\r\n            return (<div>\r\n                        <p>{title}</p>\r\n                        {/* 传递父组件的属性给子组件 */}\r\n                        <Com {...this.props} data={this.state.data}/>\r\n                    </div>)\r\n        }\r\n    }\r\n    // Fetch.displayName = `Fetch(${Com.name})`\r\n    Fetch.displayName = `Fetch(${getDisplayName(Com)})`\r\n\r\n    return Fetch;\r\n}\r\n\r\nclass Music extends Component{\r\n    render(){\r\n        return (\r\n            <ul>\r\n                <h1>{this.props.a}</h1>\r\n                {\r\n                    this.props.data.map(\r\n                        (item) => <li>\r\n                                    <p>{item.title}</p>\r\n                                    <p>{item.author}</p>\r\n                                </li> \r\n                    )\r\n                }\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nclass Music2 extends Component{\r\n    render(){\r\n        return (\r\n            <ul>\r\n                {\r\n                    this.props.data.map(\r\n                        (item) => <p>{item.title}</p> \r\n                    )\r\n                }\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nlet Mymusic = hoc(Music,url,'音乐');\r\nlet Mymusic2 = hoc(Music2,url,'新闻');\r\n\r\n\r\nexport default class Hoc extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Mymusic a='aa' b='bb'/>\r\n                <Mymusic/>\r\n                <Mymusic2/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport let con = React.createContext();\r\nexport let con2 = React.createContext();\r\n","import React, { Component } from 'react'\r\nimport {con,con2} from './Context'\r\n\r\nexport default class Child extends Component {\r\n    render() {\r\n        console.log(this.context);\r\n        return (\r\n            <div>\r\n                Child组件\r\n                <div>{this.context}</div>\r\n                {/* <con.Consumer>\r\n                    {\r\n                        (id) => <div>{id}</div>\r\n                    }\r\n                </con.Consumer> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n// Child.contextType = con;\r\nChild.contextType = con2;\r\n","import React, { Component } from 'react'\r\nimport Child from './Child'\r\n\r\nexport default class Parent extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            time:new Date().toLocaleString()\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.timeId = setInterval(() => {\r\n            console.log(111);\r\n            this.setState({\r\n                time:new Date().toLocaleString()\r\n            })\r\n        }, 1000);\r\n    }\r\n    componentWillUnmount(){\r\n        clearInterval(this.timeId);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>{this.state.time}</h1>\r\n                Parent组件\r\n                <Child />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport {Button} from 'antd';\r\n\r\nexport default class Sider extends Component {\r\n    render() {\r\n        let style = {float:'left'}\r\n        return (\r\n            <ul style={style}>\r\n                <Button type='primary' block>按钮</Button>\r\n                <li>\r\n                    <Link to=\"/hoc\">Hoc</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/parent\">parent</Link>\r\n                </li>\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\nimport {BrowserRouter as Router,Route,Link} from 'react-router-dom';//引进来BrowserRouter然后重命名为Router\nimport Hoc from './Hoc/Hoc';\nimport Parent from './Context/Parent';\nimport Sider from './Sider';\nexport default class App extends Component {\n    render() {\n        return (\n            <Router>\n                <div>\n                    <Sider />\n                    <div style={{float:'left',border:'2px solid red',marginLeft:'100px'}}>\n                      <Route path='/hoc' component={Hoc} />\n                      <Route path='/parent' component={Parent} />\n                    </div>\n                </div>  \n            </Router>\n        )\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react'\r\n//受控组件：value值被react控制的表单元素\r\n//可以实时获取表单元素的值(表单验证)/写法相对麻烦\r\n//\r\nexport default class ToDoInput extends Component {\r\n    constructor(){\r\n        super();\r\n        this.handleInput = this.handleInput.bind(this);\r\n        this.state = {\r\n            a:'',\r\n            b:'',\r\n            c:''\r\n        }\r\n    }\r\n    handleInput = (e) =>{\r\n        //绑定this，事件处理函数写成箭头函数，或者用bind\r\n        if(e.keyCode === 13){\r\n            this.props.add(e.target.value);\r\n        }\r\n    }\r\n    handleChange = (e)=>{\r\n        this.setState({\r\n            [e.target.name]:parseInt(e.target.value === ''?0:e.target.value)\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        console.log(this);\r\n        // this.a.focus();\r\n        this.refs.a.focus();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={this.state.b+this.state.c>10?'box':''}>\r\n                <label htmlFor=\"inp\">请输入第一个数:</label>\r\n                {/* <input ref={(inp)=>{this.a=inp}} name=\"a\" onChange={this.handleChange} value={this.state.a} onKeyDown={this.handleInput} type=\"text\"></input>+ */}\r\n                <input id=\"inp\" name=\"a\" onChange={this.handleChange} value={this.state.a} onKeyDown={this.handleInput} type=\"text\"></input>+\r\n                <input name=\"b\" onChange={this.handleChange} value={this.state.b} onKeyDown={this.handleInput} type=\"text\"></input>+\r\n                <input name=\"c\" onChange={this.handleChange} value={this.state.c} onKeyDown={this.handleInput} type=\"text\"></input>=\r\n                {/* <p>{parseInt(this.state.a===''?0:this.state.a)+parseInt(this.state.b===''?0:this.state.b)+parseInt(this.state.c===''?0:this.state.c)}</p> */}\r\n                <p>{this.state.a+this.state.b+this.state.c}</p>\r\n                {/* 非受控组件:一次性获取或处理表单元素的值*/}\r\n                {/* 以下是非受控组件的两种形式 */}\r\n                <input type='text' ref='a'></input>\r\n                <input type='text' ref={(inp)=>{this.inp=inp}}></input>\r\n                <button style={ {color:this.state.a>10?'red':'green',fontSize:'100px'} } onClick={()=>{console.log(this.inp.value)}}>提交</button>\r\n                {/* <button onClick={()=>{console.log(this.state.inputValue)}}>提交</button> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n// 受控组件：(1、2必须写)\r\n// 1、给input标签添加value属性，赋值为state的值\r\n// 2、给input标签绑定onChange事件，\r\n// 在事件处理函数中setState\r\n// 3、一个事件处理函数控制多个表单元素时，\r\n// 给input标签加上name属性,事件处理函数中写：\r\n// setState({[e.target.name]:e.target.value})","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class ToDoing extends Component {\r\n    // delItem = (index,e) =>{\r\n    //     console.log(e);\r\n    //     this.props.del(index);\r\n    // }\r\n\r\n    render() {\r\n        var {todo} = this.props;\r\n        return (\r\n            <div>\r\n                <ul>\r\n                    {\r\n                        todo.map((item,index)=>{\r\n                            // return <li key={index}>{item}---<button onClick={this.delItem.bind(this,index)}>删除</button></li>\r\n                            return <li key={index}>{item}---<button onClick={(e)=>this.props.del(index,e)}>删除</button></li>\r\n                        })\r\n                        // 如果只有一个元素的话todo.map(item=><li>{item}</li>)\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n//使用PropTypes进行类型检查\r\nToDoing.propTypes = {\r\n    todo:PropTypes.array,\r\n    del:PropTypes.func\r\n}\r\n//使用defaultProps设置默认值\r\nToDoing.defaultProps = {\r\n    todo:[1,2,3,4,4]\r\n}","import React, { Component } from 'react'\r\nimport ToDoInput from './ToDoInput'\r\nimport ToDoing from './ToDoing'\r\nimport './todo.css'\r\n\r\nexport default class ToDoList extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            todo:[1,2,3]\r\n        }\r\n\r\n        //深拷贝\\浅拷贝\r\n        var obj = {a:100,b:[1,2,3]};\r\n        var obj1 = {c:300};\r\n        // var o ={obj} ;//200\r\n        // var o ={...obj} ;\r\n        var o = Object.assign({},obj,obj1);//深拷贝\r\n        // var o =JSON.parse(JSON.stringify(obj));//深拷贝最简单的一种方法\r\n        // o.b[0] = 200;\r\n        console.log(o === obj);\r\n        //Object.keys(obj);//属性名组成的数组\r\n        Object.keys(obj).forEach((item)=>{//遍历数组，前面是属性后面是索引\r\n            console.log(item);\r\n            console.log(obj[item]);\r\n\r\n        });//属性名组成的数组\r\n    }\r\n    addItem = (data) =>{\r\n        // this.state.todo.push(data);\r\n        this.setState({\r\n            todo:[...this.state.todo,data]\r\n        // },()=>{\r\n        //     localStorage.setItem('',JSON.stringify());\r\n        // })\r\n        })\r\n    }\r\n    delItem = (idx,e) =>{\r\n         //1、不能直接改变或处理state,通过setState改变\r\n        \r\n        let todo = [...this.state.todo];\r\n        //todo.splice(idx,1);//删除下标为index的项\r\n        //2、setState是异步执行的\r\n        this.setState((state,props)=>{\r\n            console.log(state.todo);\r\n            return {\r\n                todo:todo\r\n                //不是删的那一些\r\n                // todo:state.todo.filter((item,index)=>idx!==index)\r\n            }\r\n        })\r\n        // 在setState里获取state可能会出错，不是你想要的值\r\n        // 可以像上面那样，把第一个参数写成函数，解决该问题\r\n        // this.setState({\r\n        //     todo:this.stste.num + 100\r\n        // },()=>{\r\n        //     console.log(this.state.todo);\r\n        // })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ToDoInput add={this.addItem}/>\r\n                <ToDoing del={this.delItem} todo={this.state.todo}/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n//数据请求：Axios\r\nimport Axios from 'axios';\r\nimport {fetch} from 'whatwg-fetch'\r\nexport default class request extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            data:[]\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        console.log(fetch);\r\n        let url = 'https://api.apiopen.top/musicRankingsDetails?type=1';\r\n        //默认是get请求，可配置第二个参数，配置请求的信息\r\n        fetch(url,{method:'post'})\r\n            .then((res)=>res.json())\r\n            .then((res)=>{\r\n                console.log(res);\r\n                this.setState({\r\n                    data:res.result\r\n                })\r\n            })\r\n        // Axios.get('https://api.apiopen.top/musicRankingsDetails?type=1')\r\n        // .then((res)=>{\r\n        //     console.log(res);\r\n        //     this.setState({\r\n        //         data:res.data.result\r\n        //     })\r\n        // })\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <h1>数据请求：</h1>\r\n                <ul>\r\n                    {\r\n                        this.state.data.map(\r\n                            (item,idx) => \r\n                                <li key={idx}>\r\n                                    <p>歌名:{item.title}</p>\r\n                                    <p>作者：{item.author}</p>\r\n                                </li>\r\n                            \r\n                        )\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nexport default class Portal extends Component {\r\n    handleClick=()=>{\r\n        console.log('portalClick');\r\n    }\r\n    render() {\r\n        return (\r\n            ReactDOM.createPortal(\r\n                <div>\r\n                    <h1 onClick={this.handleClick}>Portal</h1>\r\n                </div>,\r\n                document.body\r\n            )\r\n            \r\n        )\r\n    }\r\n}\r\n","import React, { Component,Fragment } from 'react'\r\nimport './Todolist.css'\r\n\r\nexport default class ToDoing extends Component {\r\n    delItem = (index,e) =>{\r\n        console.log(e);\r\n        this.props.del(index);\r\n    }\r\n\r\n    duigou = (e) =>{\r\n        if(e.target.checked){\r\n            e.target.type = \"\";\r\n        }\r\n        else{\r\n            e.target.type = \"checked\";\r\n        }\r\n    }\r\n\r\n    change = (index,e) =>{\r\n        console.log(e);\r\n        this.props.move(index);\r\n    }\r\n\r\n    clear = (e) =>{\r\n        console.log(e);\r\n        this.props.clear(e);\r\n    }\r\n    \r\n    render() {\r\n        var {todo,doing,over} = this.props;\r\n        return (\r\n        <Fragment>\r\n            <div className=\"content\">\r\n                <div className=\"todoing-box\">\r\n                    <h2 className=\"list-title\">\r\n                        正在进行\r\n                        <span className=\"title-numb\">{doing}</span>\r\n                    </h2>\r\n                </div>\r\n                <ul className=\"todoing\">\r\n                    {\r\n                        todo.map((item, index) => {\r\n                            if(item.done == \"false\"){\r\n                                return <li key={index}>\r\n                                            <input type=\"checkbox\" onChange={this.duigou} onClick={(e)=>this.props.move(index,e)}/>\r\n                                            <span>{item.title}</span>\r\n                                            <button onClick={(e)=>this.props.del(index,e)}></button>\r\n                                        </li>\r\n                            }\r\n                        })\r\n                    }\r\n                </ul>\r\n                <div className=\"todoing-box\">\r\n                    <h2 className=\"list-title\">\r\n                        已完成\r\n                        <span className=\"title-numb\">{over}</span>\r\n                    </h2>\r\n                </div>\r\n                <ul className=\"todoing\">\r\n                    {\r\n                        todo.map((item, index) => {\r\n                            if (item.done == \"true\") {\r\n                                return <li key={index}>\r\n                                            <input type=\"checkbox\" onChange={this.duigou} onClick={(e)=>this.props.move(index,e)} checked=\"checked\"/>\r\n                                            <span>{item.title}</span>\r\n                                            <button onClick={(e)=>this.props.del(index,e)}></button>\r\n                                        </li>\r\n                            }\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n            <div className=\"footer\">Copyright © 2014 todolist.cn <span className=\"clear-btn\" onClick={(e)=>this.props.clear(e)}>clear</span></div>\r\n        </Fragment>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport Portal from './Portal'\r\n\r\nexport default class ParentPortal extends Component {\r\n    handleClick=()=>{\r\n        console.log('ParentPortalClick');\r\n    }\r\n    render() {\r\n        return (\r\n            <div onClick={this.handleClick}> \r\n                <Portal />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './Todolist.css';\r\nexport default class ToDoInput extends Component {\r\n    handleInput = (e)=>{\r\n        //绑定this，事件处理函数写成箭头函数，或者用bind\r\n        if(e.keyCode === 13){\r\n            this.props.add(e.target.value);\r\n            e.target.value=\"\";\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"header\">\r\n                <div className=\"header-content\">\r\n                    <div className=\"header-title\">ToDoList</div>\r\n                    <input type=\"text\" className=\"addList\" onKeyDown={this.handleInput} placeholder=\"添加ToDo\" required=\"required\"/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport Todoing from './Todoing'\r\nimport Todoinput from './Todoinput'\r\n\r\nexport default class ToDoList extends Component {\r\n    constructor() {\r\n        super();\r\n        var doing = 0;\r\n        var over = 0;\r\n        var dataList = window.localStorage.getItem(\"todo\");\r\n        //console.log(dataList); // [{\"title\":\"88\",\"done\":\"true\"}]  string\r\n        var todo = JSON.parse(dataList);\r\n        if(todo != undefined || todo != null){\r\n            todo.map((item,index) => {\r\n                if(item.done == \"false\"){\r\n                    doing ++;\r\n                }\r\n                else if(item.done == \"true\"){\r\n                    over ++;\r\n                }\r\n            });\r\n        }\r\n        else{\r\n            todo = [];\r\n        }\r\n        this.state = {\r\n            todo: todo,\r\n            doing: doing,\r\n            over: over\r\n        }\r\n    }\r\n    \r\n    addItem = (data) =>{\r\n        var dataItem = {title: data,done: \"false\"}\r\n        this.setState((state, props) => {\r\n            console.log(state.todo);\r\n            var todo = [...this.state.todo,dataItem];\r\n            window.localStorage.setItem(\"todo\", JSON.stringify(todo));\r\n            this.state.doing ++;\r\n            return {\r\n                todo:todo,\r\n                doing: this.state.doing\r\n            }\r\n        })\r\n    }\r\n    \r\n    delItem = (index,e) => {\r\n        var todo = [...this.state.todo];\r\n        this.setState((state, props) => {\r\n            console.log(state.todo);\r\n            if(todo[index].done == \"false\"){\r\n                todo.splice(index, 1);\r\n                window.localStorage.setItem(\"todo\", JSON.stringify(todo));\r\n                this.state.doing --;\r\n                return {\r\n                    todo: todo,\r\n                    doing: this.state.doing\r\n                }\r\n            }\r\n            else if(todo[index].done == \"true\") {\r\n                todo.splice(index, 1);\r\n                window.localStorage.setItem(\"todo\", JSON.stringify(todo));\r\n                this.state.over --;\r\n                return {\r\n                    todo: todo,\r\n                    over: this.state.over\r\n                }\r\n            }\r\n        })\r\n    }\r\n    \r\n    change = (index,e) => {\r\n        var todo = [...this.state.todo];\r\n        //console.log(todo);//[{title: \"0\", done: \"false\"}, {title: \"1\", done: \"true\"}]\r\n        if(todo[index].done == \"false\"){\r\n            todo[index].done = \"true\";\r\n            this.setState((state, props) => {\r\n                console.log(state.todo);\r\n                this.state.todo[index].done = \"true\";\r\n                this.state.doing --;\r\n                this.state.over ++;\r\n                return {\r\n                    todo: todo,\r\n                    doing: this.state.doing,\r\n                    over: this.state.over\r\n                }\r\n            })\r\n            window.localStorage.setItem(\"todo\", JSON.stringify(todo));\r\n        }\r\n        else if(todo[index].done == \"true\"){\r\n            todo[index].done = \"false\";\r\n            this.setState((state, props) => {\r\n                console.log(state.todo);\r\n                this.state.todo[index].done = \"false\";\r\n                this.state.doing ++;\r\n                this.state.over --;\r\n                return {\r\n                    todo: todo,\r\n                    doing: this.state.doing,\r\n                    over: this.state.over\r\n                }\r\n            })\r\n            window.localStorage.setItem(\"todo\", JSON.stringify(todo));\r\n        }\r\n    }\r\n    \r\n    clear = (e) =>{\r\n        var todo = [...this.state.todo];\r\n        window.localStorage.clear();\r\n        this.setState((state, props) => {\r\n            console.log(state.todo);\r\n            return {\r\n                todo: [],\r\n                doing: 0,\r\n                over: 0\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Todoinput add={this.addItem} />\r\n                <Todoing todo={this.state.todo} doing={this.state.doing} over={this.state.over} del={this.delItem}  move={this.change} clear={this.clear}/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React,{Fragment,Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ShowTime from './ShowTime';//引js不用加后缀名，如果是命名导出则{ShowTime}\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport ToDoList from './ToDoList/ToDoList';\r\nimport Request from './Request';\r\nimport Parent from './Context/Parent';\r\nimport Hoc from './Hoc/Hoc';\r\nimport ParentPortal from './Portal/ParentPortal';\r\nimport Todolist from './Todolist0/Todolist';\r\n\r\nReactDOM.render(<Todolist/>,document.getElementById('root'));\r\n\r\n\r\n// ReactDOM.render(<App/>,document.getElementById('root'));\r\n\r\n// ReactDOM.render(<ParentPortal/>,document.getElementById('root'));\r\n\r\n// ReactDOM.render(\r\n//         <Hoc/>,\r\n//         document.getElementById('root')\r\n//     );\r\n\r\n//Context:\r\n//1、生成Context，可写在一个js文件中,export导出\r\n//2、在根组件上import Provider,并配置Provider,加上value属性\r\n//3、在需要获取数据的组件，import Consumer并配置Consumer\r\n//Consumer组件里是个函数，函数的参数是传过来的value值\r\n\r\n// import {con,con2} from './Context/Context';\r\n// let id = 1234;\r\n// ReactDOM.render(\r\n//             <con.Provider value={id}>\r\n//                 <div>ddd</div>\r\n//                 <con2.Provider value='aaaa'>\r\n//                     <Parent/>\r\n//                 </con2.Provider>\r\n//             </con.Provider>,\r\n//             document.getElementById('root')\r\n//         );\r\n\r\n//函数声明组件\r\n// function ShowTime(props){\r\n//     console.log(props);\r\n//     return (<Fragment>\r\n//                 <div>{props.name}{props.age}</div>\r\n//                 <div>{new Date().toLocaleString()}</div>\r\n//             </Fragment>\r\n//            )\r\n// }\r\n\r\n\r\n//组件交互\r\n// 父组件--->子组件:调用子组件时添加属性,子组件通过props拿到传递的组件\r\n//子组件--->父组件：\r\n\r\n// ReactDOM.render(<ToDoList/>,document.getElementById('root'));\r\n\r\n\r\n\r\n// var num = [1,2,3,4,5];\r\n// ReactDOM.render(\r\n//     <ShowTime age={num} name=\"zhangsan\"/>,\r\n//     document.getElementById('root')\r\n// )\r\n\r\n\r\n\r\n// var num = 100;\r\n// ReactDOM.render(\r\n//     <ShowTime age={num} name=\"zhangsan\"/>,\r\n//     document.getElementById('root'))\r\n\r\n\r\n\r\n//显示当前系统时间\r\n// function showTime(){\r\n//     var ele = <div>{new Date().toLocaleString()}</div>;\r\n//     ReactDOM.render(ele,document.querySelector('#root'));\r\n// }\r\n// showTime();\r\n// setInterval(showTime,1000);\r\n\r\n\r\n\r\n//react技术栈\r\n//jsx语法\r\n// var str = 'react';\r\n// var ele = <h1 class=\"tit\">hello React {str} <p>react</p></h1>\r\n// babel编译，返回一个对象\r\n// var ele = React.createElement(\r\n//     'h1',\r\n//     {id:'tit',class:'title'},\r\n//     'hello',\r\n//     React.createElement(\r\n//         'p',\r\n//         {id:'t',class:'tit'},\r\n//         'react')\r\n// );\r\n// ReactDOM.render(ele, document.getElementById('root'));\r\n// 自己封装render函数\r\nvar obj = {\r\n    type:'div',\r\n    props:{\r\n        id:'box',\r\n        class:'box',\r\n        children:[\r\n            'hello',\r\n            'react',\r\n            {\r\n                type:'h1',\r\n                props:{\r\n                    id:'tit',\r\n                    class:'tit',\r\n                    children:[\r\n                        'title',\r\n                        'react'\r\n                    ]\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n\r\nfunction render(object,container){\r\n    var {type,props} = object;//解构赋值\r\n    //文档碎片\r\n    var fragment = document.createDocumentFragment();\r\n\r\n    var ele =  document.createElement(type);\r\n    for(var item in props){\r\n        if(item === 'class'){\r\n            ele.className = props[item];\r\n        }\r\n        else if(item === 'children'){\r\n            for(var i = 0;i < props.children.length;i ++){\r\n                // ele.innerHTML += props.children[i];\r\n                if(typeof props.children[i] === 'object'){\r\n                    render(props.children[i],ele);\r\n                }\r\n                else{\r\n                    var txt = document.createTextNode(props.children[i]);\r\n                    ele.appendChild(txt);\r\n                }\r\n            }\r\n        }\r\n        else{\r\n            ele[item] = props[item];\r\n        }\r\n        \r\n    }\r\n\r\n    fragment.appendChild(ele);\r\n    container.appendChild(fragment);\r\n    // container.appendChild(ele);\r\n\r\n    \r\n}\r\n// render(obj,document.getElementById('root'));\r\n//页面渲染过程\r\n//请求HTML页面、浏览器HTML解析器解析html文件、生成DOM树\r\n//link引入css文件、css解析器解析css、生成css对象模型，CSSOM和DOM tree结合生成一个render tree，最后浏览器绘制页面\r\n\r\n//页面回流(重排reflow):DOM结构变化，内容变化、大小、位置变化、显示变化都会引起页面回流\r\n//页面重绘(repaint):颜色的变化(背景色、字体颜色、边框颜色)\r\n//回流肯定会引起重绘\r\n\r\n//1、先用变量进行DOM处理，最后一次渲染\r\n// console.time('time');\r\n// var div = document.getElementById('root');\r\n// var str = '';\r\n// for(var i = 0;i < 1000; i ++){\r\n//     str += '<p>' + i + '</p>';\r\n// }\r\n// div.innerHTML = str;\r\n// console.timeEnd('time');\r\n\r\n\r\n//2、对于样式处理,声明一个css类\r\nvar div = document.getElementById('root');\r\n// div.style.width = '100px';\r\n// div.style.height = '100px';\r\n// div.style.background = 'red';\r\n\r\ndiv.className = 'active';\r\n\r\n//3、offsetLeft、offsetWidth等都会引起回流，要慎用\r\n// console.log(div.offsetLeft);\r\n// var wid = div.offsetWidth;\r\n// setInterval(() => {\r\n    // div.style.width = div.offsetWidth + 1 + 'px';\r\n\r\n//     wid += 1;\r\n//     div.style.width = wid + 'px';\r\n// },100)\r\n\r\n//4、文档碎片(内存中的一个变量)\r\n\r\n// var ele = React.createElement('h1',{id:'tit',class:'tit'},'hello',React.createElement('p',{id:'t',class:'t'},'react'));\r\n\r\n// console.log(ele);\r\n// ReactDOM.render(ele, document.getElementById('root'));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}